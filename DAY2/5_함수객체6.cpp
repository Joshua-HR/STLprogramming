// 3_함수객체4 -  137 page 제일 윗부분내용

// 함수객체의 주요 장점
// 1. "상태"를 가지는 함수
// 2. 함수 객체가 함수 보다 "빠른" 경우가 있다. - 어렵습니다.

       int Add1(int a, int b) { return a + b; }
inline int Add2(int a, int b) { return a + b; }

int main()
{
	int n1 = Add1(1, 2);// 호출
						// => 인자(1,2)를 약속된 장소에 넣고
						// => Add1 함수로 이동

	int n2 = Add2(1, 2);// 치환
						// => Add2 의 기계어 코드를 이 부분에 치환
						// 장점 : 호출 보다 빠르다.
						// 단점 : 크기가 큰 함수가 여러번 치환 되면
						//       실행파일의 크기가 커질수 있다


	int(*f)(int, int) = &Add2;


	if (사용자 입력값 == 1) f = &Add1;
	
	// 위와 같은 코드가 있다면 컴파일러는 f가 어느 함수를 가리키는지
	// 컴파일 시간에 알수 있을까요 ?

	
	f(1, 2); // 호출 ? 치환 ? => 호출 입니다.
}

// 핵심 
// 1. 인라인 치환은 "컴파일 시간"에 수행됩니다.
// 2. 인라인 함수 라도 함수 포인터에 담아서 사용하면 인라인 치환 될수
//    없습니다.


