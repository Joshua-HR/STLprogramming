// 2_컨테이너의공통의특징2-1
#include <list>
#include "show.h"

int main()
{
	std::list<int> s = { 1,2,3,4,5 };

	// 1. 요소와 반복자를 잘 구별 하세요
	auto n = s.front(); // 1번째 요소 얻기, auto 는 int
	auto p = s.begin(); // 1번째 요소를 가리키는 반복자 얻기
						// auto 는 iterator
						// 요소에 접근 하려면 "*p"

	// 2. "요소를 제거" 하면서 "요소를 반환" 하는 멤버 함수는 없습니다.
//	int n2 = s.pop_front(); // error
							// pop_front는 반환 타입이 void


	// 3. 단, erase는 반환 값이 void 가 아닙니다.
	std::list<int> s2 = { 1,2,3,4,5 };

	auto p2 = s2.begin();

	while (p2 != s2.end())
	{
		//=================================
		/*
		if (*p2 == 2)
			s2.erase(p2);  // p2 가 가리키는 요소 제거
		
		++p2;	// 버그!! p2가 가리키는 곳이 제거되었으므로
				// p2 반복자는 이제 사용할수 없습니다.
				*/
		//=========================================
		// 아래 처럼 해야 합니다.
		if (*p2 == 2)
			p2 = s2.erase(p2);	// erase 의 반환 값은
								// 제거된 요소의 값이 아닌
								// 제거된 요소의 다음 반복자 입니다.
		else
			++p2;

	}
	show(s2); // 1, 3, 4, 5
}