// 6_람다표현식4
#include <iostream>

// 핵심 : 인자로 함수를 받일때 "함수 포인터"를 사용했다면
// "람다표현식"을 전달해도 인라인 치환 효과는 없습니다.
// 즉, 일반 함수를 보내는 것과 같습니다.


// 어떤 함수가 인자로 함수를 받으려고 합니다.

// 1. 함수 포인터로 받기
void f1(int(*f)(int, int))
{
	f(1, 2); // 치환 안된.
			 // 람다 표현식을 받을때 함수 포인터로 받으면
			 // 사용시 인라인 치환 안됩니다.
}

// 2. 템플릿으로 받기
template<typename T>
void f2(T f)
{
	f(1, 2); // 치환 됩니다.
}

int main()
{
	f1( [](int a, int b) {return a + b; } );
	f2( [](int a, int b) {return a + b; } );
}